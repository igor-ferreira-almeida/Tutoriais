{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["ConnectionFactory","HttpService","Negociacao","NegociacaoDAO","NegociacaoService","_http","Promise","all","listNegociacoesSemana","listNegociacoesSemanaAnterior","listNegociacoesSemanaRetrasada","then","negociacoes","periodos","reduce","dados","periodo","concat","catch","Error","erro","promise","resolve","reject","get","map","Date","objeto","data","quantidade","valor","console","log","getConnection","dao","connection","listaTodas","negociacao","adiciona","apagaTodas","listaAtual","listNegociacoes","filter","some","equals","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {ConnectionFactory} from \"./ConnectionFactory\";\r\nimport {HttpService} from \"./HttpService\";\r\n\r\nimport {Negociacao} from \"../models/Negociacao\";\r\nimport {NegociacaoDAO} from \"../daos/NegociacaoDAO\";\r\n\r\nexport class NegociacaoService {\r\n\r\n    constructor() {\r\n        this._http = new HttpService();\r\n    }\r\n\r\n    listNegociacoes() {\r\n        return Promise.all([\r\n            this.listNegociacoesSemana(),\r\n            this.listNegociacoesSemanaAnterior(),\r\n            this.listNegociacoesSemanaRetrasada()\r\n        ]).then(periodos => {\r\n            let negociacoes = periodos.reduce((dados, periodo) => dados.concat(periodo), []);\r\n            return negociacoes;\r\n        }).catch(erro => {\r\n            throw new Error(erro);\r\n        });\r\n    }\r\n\r\n    listNegociacoesSemana() {\r\n        let promise = new Promise((resolve, reject) => {\r\n            this._http.get(\"negociacoes/semana\").then(negociacoes => {\r\n                resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)))\r\n            }).catch(erro => {\r\n                console.log(erro);\r\n                reject(\"Não foi possível obter as negociações da semana\");\r\n            });\r\n        });\r\n\r\n        return promise;\r\n    }\r\n\r\n    listar() {\r\n        return ConnectionFactory.getConnection()\r\n            .then(connection => {\r\n                let dao = new NegociacaoDAO(connection);\r\n                dao.listaTodas()\r\n            }).catch(() => {\r\n                throw new Error(\"Não foi possível listar as negociações\");\r\n            });\r\n    }\r\n\r\n    cadastrar(negociacao) {\r\n        return ConnectionFactory.getConnection()\r\n            .then(connection => {\r\n                let dao = new NegociacaoDAO(connection);\r\n                dao.adiciona(negociacao).then(() => \"Negociação adicionada com sucesso\");\r\n            }).catch(erro => {\r\n                console.log(erro);\r\n                throw new Error(\"Não foi possível adicionar a negociação\");\r\n            });\r\n    }\r\n\r\n    apaga() {\r\n        return ConnectionFactory.getConnection()\r\n            .then(connection => new NegociacaoDAO(connection))\r\n            .then(dao => dao.apagaTodas())\r\n            .then(() => \"Negociações apagadas com sucesso\")\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error(\"Não foi possível apagar a negociação\");\r\n            })\r\n\r\n    }\r\n\r\n    listNegociacoesSemanaAnterior() {\r\n        let promise = new Promise((resolve, reject) => {\r\n            this._http.get(\"negociacoes/anterior\").then(negociacoes => {\r\n                resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)))\r\n            }).catch(erro => {\r\n                console.log(erro);\r\n                reject(\"Não foi possível obter as negociações da semana anterior\");\r\n            });\r\n        });\r\n\r\n        return promise;\r\n    }\r\n\r\n    listNegociacoesSemanaRetrasada() {\r\n        let promise = new Promise((resolve, reject) => {\r\n            this._http.get(\"negociacoes/retrasada\").then(negociacoes => {\r\n                resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)))\r\n            }).catch(erro => {\r\n                console.log(erro);\r\n                reject(\"Não foi possível obter as negociações da semana retrasada\");\r\n            });\r\n        });\r\n\r\n        return promise;\r\n    }\r\n\r\n    importar(listaAtual) {\r\n        return this.listNegociacoes()\r\n            .then(negociacoes => negociacoes.filter(negociacao =>\r\n                !listaAtual.some(negociacaoExistente => negociacao.equals(negociacaoExistente))\r\n            )\r\n        ).catch(erro => {\r\n            console.log(erro);\r\n            throw new Error(\"Não foi possível importar as negociações\");\r\n        });\r\n    }\r\n}"]}