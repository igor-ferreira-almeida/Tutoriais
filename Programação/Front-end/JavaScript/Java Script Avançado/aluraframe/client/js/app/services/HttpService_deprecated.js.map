{"version":3,"sources":["../../app-es6/services/HttpService_deprecated.js"],"names":["HttpService","url","Promise","resolve","reject","xhr","XMLHttpRequest","open","onreadystatechange","readyState","EstadoRequisicao","REQUISICAO_CONCLUIDA_E_RESPOSTA_PRONTA","status","JSON","parse","responseText","send","dado","setRequestHeader","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACMA,uB;;;;;;;wCACEC,G,EAAK;AACL,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIC,MAAM,IAAIC,cAAJ,EAAV;AACAD,gCAAIE,IAAJ,CAAS,KAAT,EAAgBN,GAAhB;;AAEAI,gCAAIG,kBAAJ,GAAyB,YAAM;AAC3B,oCAAIH,IAAII,UAAJ,IAAkBC,iBAAiBC,sCAAvC,EAA+E;AAC3E,wCAAIN,IAAIO,MAAJ,IAAc,GAAlB,EAAuB;AACnBT,gDAAQU,KAAKC,KAAL,CAAWT,IAAIU,YAAf,CAAR;AACH,qCAFD,MAEO;AACHX,+CAAOC,IAAIU,YAAX;AACH;AACJ;AACJ,6BARD;;AAUAV,gCAAIW,IAAJ;AACH,yBAfM,CAAP;AAgBH;;;yCAEIf,G,EAAKgB,I,EAAM;AACZ,+BAAO,IAAIf,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIC,MAAM,IAAIC,cAAJ,EAAV;AACAD,gCAAIE,IAAJ,CAAS,MAAT,EAAiBN,GAAjB,EAAsB,IAAtB;AACAI,gCAAIa,gBAAJ,CAAqB,cAArB,EAAqC,kBAArC;AACAb,gCAAIG,kBAAJ,GAAyB,YAAM;;AAE3B,oCAAIH,IAAII,UAAJ,IAAkBC,iBAAiBC,sCAAvC,EAA+E;;AAE3E,wCAAIN,IAAIO,MAAJ,IAAc,GAAlB,EAAuB;;AAEnBT,gDAAQU,KAAKC,KAAL,CAAWT,IAAIU,YAAf,CAAR;AACH,qCAHD,MAGO;;AAEHX,+CAAOC,IAAIU,YAAX;AACH;AACJ;AACJ,6BAZD;AAaAV,gCAAIW,IAAJ,CAASH,KAAKM,SAAL,CAAeF,IAAf,CAAT;AACH,yBAnBM,CAAP;AAqBH","file":"HttpService_deprecated.js","sourcesContent":["\r\nclass HttpService {\r\n    get(url) {\r\n        return new Promise((resolve, reject) => {\r\n            let xhr = new XMLHttpRequest();\r\n            xhr.open(\"GET\", url);\r\n\r\n            xhr.onreadystatechange = () => {\r\n                if (xhr.readyState == EstadoRequisicao.REQUISICAO_CONCLUIDA_E_RESPOSTA_PRONTA) {\r\n                    if (xhr.status == 200) {\r\n                        resolve(JSON.parse(xhr.responseText));\r\n                    } else {\r\n                        reject(xhr.responseText);\r\n                    }\r\n                }\r\n            };\r\n\r\n            xhr.send();\r\n        });\r\n    }\r\n\r\n    post(url, dado) {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let xhr = new XMLHttpRequest();\r\n            xhr.open(\"POST\", url, true);\r\n            xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n            xhr.onreadystatechange = () => {\r\n\r\n                if (xhr.readyState == EstadoRequisicao.REQUISICAO_CONCLUIDA_E_RESPOSTA_PRONTA) {\r\n\r\n                    if (xhr.status == 200) {\r\n\r\n                        resolve(JSON.parse(xhr.responseText));\r\n                    } else {\r\n\r\n                        reject(xhr.responseText);\r\n                    }\r\n                }\r\n            };\r\n            xhr.send(JSON.stringify(dado));\r\n        });\r\n\r\n    }\r\n}"]}