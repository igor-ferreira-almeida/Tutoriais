{"version":3,"sources":["../../app-es6/daos/NegociacaoDAO.js"],"names":["Negociacao","NegociacaoDAO","connection","_connection","_store","negociacao","Promise","resolve","reject","transaction","store","objectStore","request","add","onsuccess","console","log","onerror","e","target","error","clear","cursor","openCursor","negociacoes","atual","event","result","dado","value","push","_data","_quantidade","_valor","continue","name"],"mappings":";;;;;;;;;;;;;;;AACQA,sB,qBAAAA,U;;;;;;;;;;;;;;;;;;;;;qCAEKC,a;AAET,uCAAYC,UAAZ,EAAwB;AAAA;;AACpB,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAc,YAAd;AAEH;;;;6CAEQC,U,EAAY;AAAA;;AACjB,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIC,cAAc,MAAKN,WAAL,CAAiBM,WAAjB,CAA6B,CAAC,MAAKL,MAAN,CAA7B,EAA4C,WAA5C,CAAlB;AACA,gCAAIM,QAAQD,YAAYE,WAAZ,CAAwB,MAAKP,MAA7B,CAAZ;AACA,gCAAIQ,UAAUF,MAAMG,GAAN,CAAUR,UAAV,CAAd;;AAEAO,oCAAQE,SAAR,GAAoB,aAAK;AACrBC,wCAAQC,GAAR,CAAY,iCAAZ;AACAT;AACH,6BAHD;;AAKAK,oCAAQK,OAAR,GAAkB,aAAK;AACnBF,wCAAQC,GAAR,CAAYE,EAAEC,MAAF,CAASC,KAArB;AACAZ,uCAAO,yCAAP;AACH,6BAHD;AAIH,yBAdM,CAAP;AAeH;;;iDAEY;AAAA;;AACT,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIC,cAAc,OAAKN,WAAL,CAAiBM,WAAjB,CAA6B,OAAKL,MAAlC,EAA0C,WAA1C,CAAlB;AACA,gCAAIM,QAAQD,YAAYE,WAAZ,CAAwB,OAAKP,MAA7B,CAAZ;;AAEA,gCAAIQ,UAAUF,MAAMW,KAAN,EAAd;;AAEAT,oCAAQE,SAAR,GAAoB;AAAA,uCAAKP,QAAQ,mCAAR,CAAL;AAAA,6BAApB;AACAK,oCAAQK,OAAR,GAAkB;AAAA,uCAAKT,OAAO,yCAAP,CAAL;AAAA,6BAAlB;AACH,yBARM,CAAP;AASH;;;iDAEY;AAAA;;AACT,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIC,cAAc,OAAKN,WAAL,CAAiBM,WAAjB,CAA6B,OAAKL,MAAlC,EAA0C,WAA1C,CAAlB;AACA,gCAAIM,QAAQD,YAAYE,WAAZ,CAAwB,OAAKP,MAA7B,CAAZ;;AAEA,gCAAIkB,SAASZ,MAAMa,UAAN,EAAb;AACA,gCAAIC,cAAc,EAAlB;;AAEAF,mCAAOR,SAAP,GAAmB,iBAAS;AACxB,oCAAIW,QAAQC,MAAMP,MAAN,CAAaQ,MAAzB;;AAEA,oCAAGF,KAAH,EAAU;AACN,wCAAIG,OAAOH,MAAMI,KAAjB;AACAL,gDAAYM,IAAZ,CAAiB,IAAI9B,UAAJ,CAAe4B,KAAKG,KAApB,EAA2BH,KAAKI,WAAhC,EAA6CJ,KAAKK,MAAlD,CAAjB;;AAEAR,0CAAMS,QAAN;AACH,iCALD,MAKO;AACH3B,4CAAQiB,WAAR;AACH;AACJ,6BAXD;;AAaAF,mCAAOL,OAAP,GAAiB,iBAAS;AACtBF,wCAAQC,GAAR,CAAYU,MAAMP,MAAN,CAAaC,KAAb,CAAmBe,IAA/B;AACA3B,uCAAO,wCAAP;AACH,6BAHD;AAIH,yBAxBM,CAAP;AAyBH","file":"NegociacaoDAO.js","sourcesContent":["\r\nimport {Negociacao} from \"../models/Negociacao\";\r\n\r\nexport class NegociacaoDAO {\r\n\r\n    constructor(connection) {\r\n        this._connection = connection;\r\n        this._store = \"negociacao\";\r\n\r\n    }\r\n\r\n    adiciona(negociacao) {\r\n        return new Promise((resolve, reject) => {\r\n            let transaction = this._connection.transaction([this._store], \"readwrite\");\r\n            let store = transaction.objectStore(this._store);\r\n            let request = store.add(negociacao);\r\n\r\n            request.onsuccess = e => {\r\n                console.log(\"Negociação incluída com sucesso\");\r\n                resolve();\r\n            };\r\n\r\n            request.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject(\"Não foi possível adicionar a negociação\");\r\n            };\r\n        });\r\n    }\r\n\r\n    apagaTodas() {\r\n        return new Promise((resolve, reject) => {\r\n            let transaction = this._connection.transaction(this._store, \"readwrite\");\r\n            let store = transaction.objectStore(this._store);\r\n\r\n            let request = store.clear();\r\n\r\n            request.onsuccess = e => resolve(\"Negociações removidas com sucesso\");\r\n            request.onerror = e => reject(\"Não foi possível remover as negociações\");\r\n        });\r\n    }\r\n\r\n    listaTodas() {\r\n        return new Promise((resolve, reject) => {\r\n            let transaction = this._connection.transaction(this._store, \"readwrite\");\r\n            let store = transaction.objectStore(this._store);\r\n\r\n            let cursor = store.openCursor();\r\n            let negociacoes = [];\r\n\r\n            cursor.onsuccess = event => {\r\n                let atual = event.target.result;\r\n\r\n                if(atual) {\r\n                    var dado = atual.value;\r\n                    negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\r\n\r\n                    atual.continue();\r\n                } else {\r\n                    resolve(negociacoes);\r\n                }\r\n            };\r\n\r\n            cursor.onerror = event => {\r\n                console.log(event.target.error.name);\r\n                reject(\"Não foi possível listar as negociações\");\r\n            };\r\n        });\r\n    }\r\n}"]}